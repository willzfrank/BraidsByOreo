"use strict";

/* ----------------------------------------------------------------------------
 * Easy!Appointments - Online Appointment Scheduler
 *
 * @package     EasyAppointments
 * @author      A.Tselegidis <alextselegidis@gmail.com>
 * @copyright   Copyright (c) Alex Tselegidis
 * @license     https://opensource.org/licenses/GPL-3.0 - GPLv3
 * @link        https://easyappointments.org
 * @since       v1.5.0
 * ---------------------------------------------------------------------------- */

/**
 * Admins HTTP client.
 *
 * This module implements the admins related HTTP requests.
 */
App.Http.Admins = function () {
  /**
   * Save (create or update) a admin.
   *
   * @param {Object} admin
   *
   * @return {Object}
   */
  function save(admin) {
    return admin.id ? update(admin) : create(admin);
  }
  /**
   * Create an admin.
   *
   * @param {Object} admin
   *
   * @return {Object}
   */


  function create(admin) {
    var url = App.Utils.Url.siteUrl('admins/create');
    var data = {
      csrf_token: vars('csrf_token'),
      admin: admin
    };
    return $.post(url, data);
  }
  /**
   * Update an admin.
   *
   * @param {Object} admin
   *
   * @return {Object}
   */


  function update(admin) {
    var url = App.Utils.Url.siteUrl('admins/update');
    var data = {
      csrf_token: vars('csrf_token'),
      admin: admin
    };
    return $.post(url, data);
  }
  /**
   * Delete an admin.
   *
   * @param {Number} adminId
   *
   * @return {Object}
   */


  function destroy(adminId) {
    var url = App.Utils.Url.siteUrl('admins/destroy');
    var data = {
      csrf_token: vars('csrf_token'),
      admin_id: adminId
    };
    return $.post(url, data);
  }
  /**
   * Search admins by keyword.
   *
   * @param {String} keyword
   * @param {Number} limit
   * @param {Number} offset
   * @param {String} orderBy
   *
   * @return {Object}
   */


  function search(keyword, limit, offset, orderBy) {
    var url = App.Utils.Url.siteUrl('admins/search');
    var data = {
      csrf_token: vars('csrf_token'),
      keyword: keyword,
      limit: limit,
      offset: offset,
      order_by: orderBy
    };
    return $.post(url, data);
  }
  /**
   * Find an admin.
   *
   * @param {Number} adminId
   *
   * @return {Object}
   */


  function find(adminId) {
    var url = App.Utils.Url.siteUrl('admins/find');
    var data = {
      csrf_token: vars('csrf_token'),
      admin_id: adminId
    };
    return $.post(url, data);
  }

  return {
    save: save,
    create: create,
    update: update,
    destroy: destroy,
    search: search,
    find: find
  };
}();